// This JLex file was machine-generated by the BNF converter
package CPP;

import java_cup.runtime.*;
%%
%cup
%unicode
%line
%public
%{
  String pstring = new String();
  public int line_num() { return (yyline+1); }
  public String buff() {return new String(yy_buffer,yy_buffer_index,10).trim();}
%}
LETTER = ({CAPITAL}|{SMALL})
CAPITAL = [A-Z\xC0-\xD6\xD8-\xDE]
SMALL = [a-z\xDF-\xF6\xF8-\xFF]
DIGIT = [0-9]
IDENT = ({LETTER}|{DIGIT}|['_])
%state COMMENT
%state CHAR
%state CHARESC
%state CHAREND
%state STRING
%state ESCAPED
%%
<YYINITIAL>\( { return new Symbol(sym._SYMB_0); }
<YYINITIAL>\) { return new Symbol(sym._SYMB_1); }
<YYINITIAL>\{ { return new Symbol(sym._SYMB_2); }
<YYINITIAL>\} { return new Symbol(sym._SYMB_3); }
<YYINITIAL>, { return new Symbol(sym._SYMB_4); }
<YYINITIAL>; { return new Symbol(sym._SYMB_5); }
<YYINITIAL>= { return new Symbol(sym._SYMB_6); }
<YYINITIAL>\+\+ { return new Symbol(sym._SYMB_7); }
<YYINITIAL>-- { return new Symbol(sym._SYMB_8); }
<YYINITIAL>\* { return new Symbol(sym._SYMB_9); }
<YYINITIAL>/ { return new Symbol(sym._SYMB_10); }
<YYINITIAL>\+ { return new Symbol(sym._SYMB_11); }
<YYINITIAL>- { return new Symbol(sym._SYMB_12); }
<YYINITIAL>< { return new Symbol(sym._SYMB_13); }
<YYINITIAL>> { return new Symbol(sym._SYMB_14); }
<YYINITIAL><= { return new Symbol(sym._SYMB_15); }
<YYINITIAL>>= { return new Symbol(sym._SYMB_16); }
<YYINITIAL>== { return new Symbol(sym._SYMB_17); }
<YYINITIAL>!= { return new Symbol(sym._SYMB_18); }
<YYINITIAL>&& { return new Symbol(sym._SYMB_19); }
<YYINITIAL>\|\| { return new Symbol(sym._SYMB_20); }
<YYINITIAL>bool { return new Symbol(sym._SYMB_21); }
<YYINITIAL>double { return new Symbol(sym._SYMB_22); }
<YYINITIAL>else { return new Symbol(sym._SYMB_23); }
<YYINITIAL>false { return new Symbol(sym._SYMB_24); }
<YYINITIAL>if { return new Symbol(sym._SYMB_25); }
<YYINITIAL>int { return new Symbol(sym._SYMB_26); }
<YYINITIAL>return { return new Symbol(sym._SYMB_27); }
<YYINITIAL>true { return new Symbol(sym._SYMB_28); }
<YYINITIAL>void { return new Symbol(sym._SYMB_29); }
<YYINITIAL>while { return new Symbol(sym._SYMB_30); }
<YYINITIAL>"#"[^\n]*\n { /* BNFC single-line comment */ }
<YYINITIAL>"//"[^\n]*\n { /* BNFC single-line comment */ }
<YYINITIAL>"/*" { yybegin(COMMENT); }
<COMMENT>"*/" { yybegin(YYINITIAL); }
<COMMENT>. { }
<COMMENT>[\n] { }


<YYINITIAL>{LETTER}({LETTER}|{DIGIT}|_)* { return new Symbol(sym.Id, yytext().intern()); }



<YYINITIAL>{DIGIT}+"."{DIGIT}+("e"(\-)?{DIGIT}+)? { return new Symbol(sym._DOUBLE_, new Double(yytext())); }
<YYINITIAL>{DIGIT}+ { return new Symbol(sym._INTEGER_, new Integer(yytext())); }

<YYINITIAL>[ \t\r\n\f] { /* ignore white space. */ }
